
ï»¿var Vertex,Point,Line,Polygon,Circle,Style,Painter;(function(){var id=0;function inheritFromConstructor(parent,child){child.prototype=new parent();child.prototype.constructor=child;};Vertex=function(x,y){this.x=x;this.y=y;};function Shape(){this.vertexes=null;}
Shape.prototype.getPerimeter=function(){return"false Shape.prototype.getPerimeter";};Shape.prototype.getArea=function(){return"false Shape.prototype.GetArea";};Shape.prototype.resize=function(vertexIndex,multiple){if(vertexIndex>this.vertexes.length-1){return"false";}
var standardVertex=this.vertexes[vertexIndex];for(var i=0;i<this.vertexes.length;i++){this.vertexes[i].x=standardVertex.x-(standardVertex.x-this.vertexes[i].x)*multiple;this.vertexes[i].y=standardVertex.y-(standardVertex.y-this.vertexes[i].y)*multiple;}};Shape.prototype.move=function(veticalOffset,horizontalOffset){for(var i=0;i<this.vertexes.length;i++){this.vertexes[i].x+=veticalOffset;this.vertexes[i].y+=horizontalOffset;}};Point=function(vertex){vertex=vertex||new Vertex(0,0);this.vertexes=[vertex];this.id=id++;};inheritFromConstructor(Shape,Point);Point.prototype.getPerimeter=function(){return 0;};Point.prototype.getArea=function(){return 0;};Point.prototype.resize=function(multiple){};Line=function(vertex1,vertex2){this.vertexes=[vertex1,vertex2];this.id=id++;};inheritFromConstructor(Shape,Line);Line.prototype.getPerimeter=function(){return Math.sqrt(Math.pow(this.vertexes[1].x-this.vertexes[0].x,2)+Math.pow(this.vertexes[1].y-this.vertexes[0].y,2));}
Line.prototype.getArea=function(){return 0;};Polygon=function(vertexes){this.vertexes=vertexes;this.id=id++;};inheritFromConstructor(Shape,Polygon);Polygon.prototype.getPerimeter=function(){var perimeter=0;for(var i=0;i<this.vertexes.length-1;i++){perimeter+=Math.sqrt(Math.pow(this.vertexes[i+1].x-this.vertexes[i].x,2)+Math.pow(this.vertexes[i+1].y-this.vertexes[i].y,2));}
perimeter+=Math.sqrt(Math.pow(this.vertexes[0].x-this.vertexes[this.vertexes.length-1].x,2)+Math.pow(this.vertexes[0].y-this.vertexes[this.vertexes.length-1].y,2));return perimeter;}
Polygon.prototype.getArea=function(){return"true Polygon.prototype.GetArea";};Circle=function(center,radius){this.vertexes=[center];this.radius=radius;this.id=id++;};inheritFromConstructor(Shape,Circle);Circle.prototype.getPerimeter=function(){return 2*Math.PI*this.radius;};Circle.prototype.getArea=function(){return Math.PI*Math.pow(this.radius,2);};Circle.prototype.resize=function(multiple){this.radius*=multiple;};Style=function(borderColor,fillColor,borderWidth){this.borderColor=borderColor;this.fillColor=fillColor||"rgba(0,0,0,0)";this.borderWidth=borderWidth||1;};Painter=function(canvas,style){this.canvas=canvas;this.cxt=canvas.getContext('2d');this.style=style||new Style("Black");this.shapes=[];};Painter.prototype.draw=function(shape){this.setCxtStyle();switch(shape.constructor){case Point:this.drawPoint(shape.vertexes[0]);break;case Line:case Polygon:this.drawLines(shape);break;case Circle:this.drawCircle(shape);break;default:return"wrong shape";break;}};Painter.prototype.drawPoint=function(vertex){return"drawing Point";};Painter.prototype.drawLines=function(lines){this.cxt.beginPath();this.cxt.moveTo(lines.vertexes[0].x,lines.vertexes[0].y);for(var i=1;i<lines.vertexes.length;i++){this.cxt.lineTo(lines.vertexes[i].x,lines.vertexes[i].y);}
this.cxt.lineTo(lines.vertexes[0].x,lines.vertexes[0].y);this.cxt.closePath();this.cxt.stroke();this.cxt.fill();};Painter.prototype.drawCircle=function(circle){this.cxt.beginPath();this.cxt.arc(circle.vertexes[0].x,circle.vertexes[0].y,circle.radius,0,2*Math.PI);this.cxt.closePath();this.cxt.stroke();this.cxt.fill();};Painter.prototype.setCanvas=function(canvas){this.canvas=canvas;this.cxt=canvas.getContext('2d');};Painter.prototype.setCxtStyle=function(){this.cxt.strokeStyle=this.style.borderColor;this.cxt.lineWidth=this.style.borderWidth;this.cxt.fillStyle=this.style.fillColor;};})();